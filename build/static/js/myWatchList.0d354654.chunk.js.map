{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.js","views/MyWatchListView/MyWatchList.js","components/MainLayout/MainLayout.js","components/MainLayout/MainLayout.module.css","components/Logo/Logo.js","components/Logo/Logo.module.css"],"names":["module","exports","Form","state","toDoText","toDoInputId","shortid","generate","handleChange","e","currentTarget","name","value","setState","handleSubmit","preventDefault","toast","error","props","toDos","items","find","toDo","text","onSubmit","reset","className","styles","box","this","autoComplete","htmlFor","type","id","onChange","input","placeholder","button","Component","MyWatchList","Logo","autoClose","Layout","children","layout","defaultProps","title","in","appear","classNames","timeout","unmountOnExit","logo"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,qBAAqB,KAAO,qB,gKCmEtHC,E,4MA7DbC,MAAQ,CACNC,SAAU,I,EAGZC,YAAcC,IAAQC,W,EAEtBC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,cAAlBC,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKC,SAAL,eAAgBF,EAAOC,K,EAWzBE,aAAe,SAAAL,GACbA,EAAEM,iBAC0B,KAAxB,EAAKZ,MAAMC,UACbY,IAAMC,MAAM,cAEV,EAAKC,MAAMC,MAAMC,MAAMC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKnB,MAAMC,WAAakB,EAAKC,QACzEP,IAAMC,MAAM,yBAIZ,EAAKC,MAAMM,SAAS,EAAKrB,OAE3B,EAAKsB,S,EAGPA,MAAQ,WACN,EAAKZ,SAAS,CAAET,SAAU,M,4CAG5B,WACE,OAAQ,mCACN,uBAAMsB,UAAWC,IAAOC,IACtBJ,SAAUK,KAAKf,aACfgB,aAAa,MAFf,UAGE,uBAAOC,QAASF,KAAKxB,YAAaqB,UAAWC,IAAOL,KAApD,SACE,uBACEU,KAAK,OACLrB,KAAK,WACLsB,GAAIJ,KAAKxB,YACTO,MAAOiB,KAAK1B,MAAMC,SAClB8B,SAAUL,KAAKrB,aACfkB,UAAWC,IAAOQ,MAClBC,YAAY,yBAEhB,wBAAQJ,KAAK,SAASN,UAAWC,IAAOU,OAAxC,+B,GAtDWC,a,gBCEbC,E,4JAKJ,WACE,OACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CAAMjB,KAAK,kBACX,cAAC,EAAD,IACA,cAAC,IAAD,CAAgBkB,UAAW,c,GAVTH,aAgBXC,a,qDCxBf,iCAIA,SAASG,EAAT,GAA8B,IAAZC,EAAW,EAAXA,SACd,OACE,qBAAKjB,UAAWC,IAAOiB,OAAvB,SACGD,IAITD,EAAOG,aAAe,CACpBC,MAAO,GACPH,SAAU,IASGD,O,mBCrBf1C,EAAOC,QAAU,CAAC,OAAS,6B,gCCA3B,6CAIA,SAASuC,EAAT,GAAwB,IAARjB,EAAO,EAAPA,KACZ,OAAQ,mCACN,cAAC,IAAD,CACEwB,IAAI,EAAMC,QAAQ,EAClBC,WAAW,OACXC,QAAS,IACTC,eAAa,EAJf,SAKE,oBAAIzB,UAAWC,IAAOyB,KAAtB,SAA6B7B,QAKrCiB,EAAKK,aAAe,CAClBtB,KAAM,IAOOiB,O,mBCxBfxC,EAAOC,QAAU,CAAC,KAAO","file":"static/js/myWatchList.0d354654.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Form_box__3q9gt\",\"toDo\":\"Form_toDo__VLvNk\",\"input\":\"Form_input__1AiMT\",\"button\":\"Form_button__1asbY\",\"logo\":\"Form_logo__1TagT\"};","import shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    toDoText: '',\r\n  }\r\n\r\n  toDoInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({[name]: value})\r\n    /*switch (name) {\r\n      case 'toDo':\r\n        setToDoText(value);\r\n        break;\r\n            \r\n      default:\r\n        return toast.error('AAA!!');;\r\n    }*/\r\n  };\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.toDoText === '') {\r\n      toast.error('ToDo empty')\r\n    }\r\n    if (this.props.toDos.items.find(({ toDo }) => this.state.toDoText === toDo.text)) {\r\n      toast.error('ToDo is already exist');\r\n    }\r\n    else {\r\n      //dispatch(toDosOperations.addToDo({ toDoText }));\r\n      this.props.onSubmit(this.state);\r\n    };\r\n    this.reset();\r\n  };\r\n    \r\n  reset = () => {\r\n    this.setState({ toDoText: '' });\r\n  };\r\n    \r\n  render() {\r\n    return (<>  \r\n      <form className={styles.box}\r\n        onSubmit={this.handleSubmit}\r\n        autoComplete=\"off\">\r\n        <label htmlFor={this.toDoInputId} className={styles.toDo}>\r\n          <input\r\n            type='text'\r\n            name='toDoText'\r\n            id={this.toDoInputId}\r\n            value={this.state.toDoText}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n            placeholder='Enter your message' />\r\n        </label>\r\n        <button type='submit' className={styles.button}>\r\n          Add todo\r\n        </button>\r\n      </form>\r\n    </>)\r\n  };\r\n};\r\n\r\nexport default Form;","import { Component } from 'react';\r\nimport Layout from '../../components/MainLayout/MainLayout';\r\n//import LocationsTable from '../../components/LocationsTable/LocationsTable';\r\nimport Form from '../../components/Form/Form';\r\nimport \"../../stylesheets/animation.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Logo from '../../components/Logo/Logo';\r\n\r\nclass MyWatchList extends Component {\r\n  /*componentDidMount() {\r\n    this.props.fetchCharacters();\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <Layout >\r\n        <Logo text='My watch list'/>\r\n        <Form />\r\n        <ToastContainer autoClose={2500} />    \r\n      </Layout>\r\n    );\r\n  };\r\n};\r\n\r\nexport default MyWatchList;\r\n/**\r\n        <LocationsTable /> */","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MainLayout.module.css';\r\n\r\nfunction Layout({ children}) {\r\n    return (\r\n      <div className={styles.layout} >\r\n        {children}\r\n      </div>)\r\n}\r\n\r\nLayout.defaultProps = {\r\n  title: '',\r\n  children: '',\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Layout;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"MainLayout_layout__Rzm_M\"};","import PropTypes from 'prop-types';\r\nimport styles from './Logo.module.css';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction Logo ({text}) {\r\n    return (<>\r\n      <CSSTransition\r\n        in={true} appear={true}\r\n        classNames='logo'\r\n        timeout={500}\r\n        unmountOnExit>\r\n        <h1 className={styles.logo}>{text}</h1>\r\n      </CSSTransition>\r\n    </>)\r\n  };\r\n\r\nLogo.defaultProps = {\r\n  text: '',\r\n};\r\n\r\nLogo.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2kkPA\"};"],"sourceRoot":""}