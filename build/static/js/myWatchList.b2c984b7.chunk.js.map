{"version":3,"sources":["components/Form/Form.module.css","components/WatchList/WatchList.module.css","components/MyWatchListItem/MyWatchListItem.module.css","components/Form/Form.js","components/MyWatchListItem/MyWatchListItem.js","components/WatchList/WatchList.js","views/MyWatchListView/MyWatchList.js","components/MainLayout/MainLayout.js","components/MainLayout/MainLayout.module.css","components/Logo/Logo.js","components/Logo/Logo.module.css"],"names":["module","exports","Form","state","toDoText","toDoTextId","shortid","generate","handleChange","e","currentTarget","name","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","box","this","autoComplete","htmlFor","toDo","type","id","onChange","input","placeholder","button","Component","MyWatchListItem","onClick","item","fill","defaultProps","WatchList","toDos","onRemoveToDo","toDosList","map","MyWatchList","formSubmitHandler","localStorage","getItem","toDoId","find","toast","error","prevState","removeToDo","filter","parsedToDos","JSON","parse","setItem","stringify","Logo","text","length","autoClose","Layout","children","layout","title","in","appear","classNames","timeout","unmountOnExit","logo"],"mappings":"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","file":"static/js/myWatchList.b2c984b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Form_box__3q9gt\",\"toDo\":\"Form_toDo__VLvNk\",\"input\":\"Form_input__1AiMT\",\"button\":\"Form_button__1asbY\",\"logo\":\"Form_logo__1TagT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDosList\":\"WatchList_toDosList__2N9F8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyWatchListItem_item__2_vLh\",\"button\":\"MyWatchListItem_button__1oscu\",\"number\":\"MyWatchListItem_number__28NrL\",\"name\":\"MyWatchListItem_name__2pRj3\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\n//import { toast } from 'react-toastify';\r\n//import 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    toDoText: '',\r\n  }\r\n\r\n  toDoTextId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({[name]: value})\r\n  };\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.toDoText === '') {\r\n      //toast.error('ToDo empty')\r\n    }\r\n    else {\r\n      this.props.onSubmit(this.state);\r\n    };\r\n    this.reset();\r\n  };\r\n    \r\n  reset = () => {\r\n    this.setState({ toDoText: '' });\r\n  };\r\n    \r\n  render() {\r\n    return (<>  \r\n      <form className={styles.box}\r\n        onSubmit={this.handleSubmit}\r\n        autoComplete=\"off\">\r\n        <label htmlFor={this.toDoTextId} className={styles.toDo}>\r\n          <input\r\n            type='text'\r\n            name='toDoText'\r\n            id={this.toDoTextId}\r\n            value={this.state.toDoText}\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n            placeholder='Enter your message' />\r\n        </label>\r\n        <button type='submit' className={styles.button}>\r\n          Add todo\r\n        </button>\r\n      </form>\r\n    </>)\r\n  };\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MyWatchListItem.module.css';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nfunction MyWatchListItem({ toDoText, id, onClick }) {\r\n \r\n  return (\r\n    <li key={id} className={styles.item}> \r\n      <p className={styles.name}><b>{toDoText}</b></p>\r\n      <button\r\n              type='button'\r\n              onClick={onClick}\r\n              className={styles.button}>\r\n              <AiOutlineClose fill=\"white\" />\r\n        </button>\r\n    </li>\r\n  );\r\n};    \r\n\r\nMyWatchListItem.defaultProps = {\r\n  name: '',\r\n};\r\n\r\nMyWatchListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MyWatchListItem;","import PropTypes from 'prop-types';\r\nimport styles from './WatchList.module.css';\r\nimport MyWatchListItem from \"../MyWatchListItem/MyWatchListItem\";\r\n\r\nfunction WatchList({ toDos, onRemoveToDo }) {\r\n\r\n  return (<>\r\n      <ul className={styles.toDosList}>\r\n      {toDos.map(({ toDoText, id }) => (\r\n        <MyWatchListItem\r\n          toDoText={toDoText}\r\n          id={id}\r\n          key={id}\r\n          onClick={() => onRemoveToDo(id)}>\r\n        </MyWatchListItem>\r\n        ))\r\n      }\r\n      </ul>\r\n    </>\r\n    );\r\n  }\r\n\r\nWatchList.defaultProps = {\r\n  toDos: [],\r\n};\r\n\r\nWatchList.propTypes = {\r\n  toDos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n  }\r\n  ))\r\n};\r\n\r\nexport default WatchList;","import { Component } from 'react';\r\nimport Layout from '../../components/MainLayout/MainLayout';\r\nimport Form from '../../components/Form/Form';\r\nimport '../../stylesheets/animation.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Logo from '../../components/Logo/Logo';\r\nimport WatchList from '../../components/WatchList/WatchList';\r\nimport shortid from 'shortid';\r\n\r\nexport default class MyWatchList extends Component {\r\n  state = {\r\n    toDos: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    const toDos = localStorage.getItem('toDos');\r\n    const parsedToDos = JSON.parse(toDos);\r\n    if (parsedToDos) {\r\n      this.setState({ toDos: parsedToDos });\r\n    }\r\n  };\r\n  \r\n  componentDidUpdate(prevState) {\r\n    if (this.state.toDos !== prevState.toDos) {\r\n      localStorage.setItem('toDos', JSON.stringify(this.state.toDos));\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { toDoText, value } = e.currentTarget;\r\n    this.setState({ [toDoText]: value });\r\n    this.props.onChange(this.state);\r\n  };\r\n  \r\n  formSubmitHandler = ({ toDoText }) => {\r\n    localStorage.getItem('toDos');\r\n    this.toDoId = shortid.generate();\r\n    const toDo = {\r\n      id: this.toDoId,\r\n      toDoText,\r\n    };\r\n    if (toDo.name !== '') {\r\n      if (this.state.toDos.find(toDo => toDo.toDoText === toDoText)) {\r\n        toast.error('ToDo is already exist');\r\n      }\r\n      else {\r\n        this.setState(prevState => {\r\n          return {\r\n            toDos: [toDo, ...prevState.toDos],\r\n          }\r\n        });\r\n      };\r\n    } else {\r\n      toast.error('ToDo details empty');\r\n    };\r\n  }\r\n\r\n  removeToDo = toDoId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        toDos: prevState.toDos.filter(({ id }) => id !== toDoId),\r\n      };\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const { toDos } = this.state;\r\n    return (\r\n        <Layout >\r\n          <Logo text='My watch list' />\r\n          <Form onSubmit={this.formSubmitHandler} />\r\n        \r\n          {toDos.length > 0 &&\r\n          <WatchList\r\n              onRemoveToDo={this.removeToDo}\r\n              toDos={toDos} />\r\n          }\r\n          <ToastContainer autoClose={2000} />\r\n        </Layout>\r\n      );\r\n    };\r\n  };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MainLayout.module.css';\r\n\r\nfunction Layout({ children}) {\r\n    return (\r\n      <div className={styles.layout} >\r\n        {children}\r\n      </div>)\r\n}\r\n\r\nLayout.defaultProps = {\r\n  title: '',\r\n  children: '',\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Layout;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"MainLayout_layout__Rzm_M\"};","import PropTypes from 'prop-types';\r\nimport styles from './Logo.module.css';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction Logo ({text}) {\r\n    return (<>\r\n      <CSSTransition\r\n        in={true} appear={true}\r\n        classNames='logo'\r\n        timeout={500}\r\n        unmountOnExit>\r\n        <h1 className={styles.logo}>{text}</h1>\r\n      </CSSTransition>\r\n    </>)\r\n  };\r\n\r\nLogo.defaultProps = {\r\n  text: '',\r\n};\r\n\r\nLogo.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2kkPA\"};"],"sourceRoot":""}