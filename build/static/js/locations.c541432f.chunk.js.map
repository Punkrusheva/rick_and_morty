{"version":3,"sources":["components/LocationsTable/LocationsTable.module.css","components/LocationsTableItem/LocationsTableItem.module.css","components/LocationsTableItem/LocationsTableItem.js","components/LocationsTable/LocationsTable.js","views/LocationsView/Locations.js","components/MainLayout/MainLayout.js","components/MainLayout/MainLayout.module.css","components/Logo/Logo.js","components/Logo/Logo.module.css","components/Filter/Filter.js","components/Filter/Filter.module.css","components/PaginationGroup/PaginationGroup.js","services/rick-and-morty-api.js"],"names":["module","exports","LocationsTableItem","name","id","dimension","type","className","styles","item","defaultProps","LocationsTable","locations","console","log","locationsTable","map","Locations","state","nextPage","prevPage","getAllLocations","then","res","setState","results","info","next","prev","this","Logo","text","Filter","value","placeholder","onChange","PaginationGroup","onClickPrev","onClickNext","autoClose","Component","Layout","children","layout","title","in","appear","classNames","timeout","unmountOnExit","logo","label","input","style","display","justifyContent","boxShadow","margin","button_group","variant","color","aria-label","src","onClick","baseURL","getAllCharacters","a","fetch","ok","Error","status","json","getAllEpisodes"],"mappings":"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","file":"static/js/locations.c541432f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationsTable\":\"LocationsTable_locationsTable__rYXuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"LocationsTableItem_item__1t53d\",\"name\":\"LocationsTableItem_name__3Rz22\",\"dimension\":\"LocationsTableItem_dimension__2hLY_\",\"type\":\"LocationsTableItem_type__3THmI\"};","import PropTypes from 'prop-types';\r\nimport styles from './LocationsTableItem.module.css';\r\n\r\nfunction LocationsTableItem({ name, id, dimension, type }) {\r\n  return (<>\r\n          <li key={id} className={styles.item}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.dimension}>{dimension}</p>\r\n            <p className={styles.type}>{type}</p>\r\n            \r\n          </li>\r\n        \r\n    </>\r\n  );\r\n};    \r\n\r\nLocationsTableItem.defaultProps = {\r\n  type: '',\r\n  name: '',\r\n  dimension: ''\r\n};\r\n\r\nLocationsTableItem.propTypes = {\r\n  type: PropTypes.string,\r\n  dimension: PropTypes.string,\r\n  name: PropTypes.string,\r\n    id: PropTypes.number.isRequired\r\n};\r\n\r\nexport default LocationsTableItem;","import PropTypes from 'prop-types';\r\nimport styles from './LocationsTable.module.css';\r\nimport LocationsTableItem from \"../LocationsTableItem/LocationsTableItem\";\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction LocationsTable({locations}) {\r\n  console.log(locations);\r\n  return (<>\r\n    <ul className={styles.locationsTable}>\r\n    {locations.map(({ name, id, dimension, type }) => (\r\n      <LocationsTableItem\r\n        name={name}\r\n        key={id}\r\n        id={id}\r\n        dimension={dimension}\r\n        type={type}>\r\n      </LocationsTableItem>\r\n      ))\r\n    }\r\n    </ul>\r\n  </>\r\n  );\r\n}\r\n  \r\nLocationsTable.defaultProps = {\r\n  locations: [],\r\n};\r\n\r\nLocationsTable.propTypes = {\r\n  locations: PropTypes.arrayOf(PropTypes.shape({\r\n    dimension: PropTypes.string,\r\n    name: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    type: PropTypes.string,\r\n  }\r\n  ))\r\n};\r\n\r\nexport default LocationsTable;","import { Component } from 'react';\r\nimport Layout from '../../components/MainLayout/MainLayout';\r\nimport LocationsTable from '../../components/LocationsTable/LocationsTable'\r\nimport Filter from '../../components/Filter/Filter';\r\nimport \"../../stylesheets/animation.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Logo from '../../components/Logo/Logo';\r\nimport PaginationGroup from '../../components/PaginationGroup/PaginationGroup';\r\nimport {\r\n  getAllLocations,\r\n  //getLocationsByDimension,\r\n  //getLocationsByName,\r\n  //getLocationsByType,\r\n  //pagination\r\n} from '../../services/rick-and-morty-api';\r\n\r\nclass Locations extends Component {\r\n  state = {\r\n    locations: [],\r\n    name: '',\r\n    type: '',\r\n    dimension: '',\r\n    nextPage: '',\r\n    prevPage: '',\r\n  }\r\n  componentDidMount() {\r\n    getAllLocations()\r\n      .then(res => this.setState({\r\n        locations: res.results,\r\n        nextPage: res.info.next,\r\n        prevPage: res.info.prev\r\n      })\r\n      );\r\n  }\r\n/*\r\n  onClick() {\r\n    pagination(this.state.nextPage)\r\n      .then(res => console.log(res)\r\n        //this.setState({ episodes: res.results, nextPage: res.info.next, prevPage: res.info.prev })\r\n        )\r\n  }*/\r\n  render() {\r\n    const { locations, name, type, dimension, prevPage, nextPage } = this.state;\r\n \r\n    return (\r\n      <Layout >\r\n        <Logo text='Locations'/>\r\n        <Filter\r\n          value={name}\r\n          placeholder='Set name'\r\n          onChange={() => console.log('name')} />\r\n        <Filter\r\n          value={type}\r\n          placeholder='Set type'\r\n          onChange={() => console.log('type')} />\r\n        <Filter\r\n          value={dimension}\r\n          placeholder='Set dimension'\r\n          onChange={() => console.log('dimension')} />\r\n        <LocationsTable locations={locations} />\r\n        <PaginationGroup prevPage={prevPage} nextPage={nextPage} onClickPrev={() => console.log(prevPage)} onClickNext={() => console.log(nextPage)}/>\r\n        <ToastContainer autoClose={2500} />\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Locations;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MainLayout.module.css';\r\n\r\nfunction Layout({ children}) {\r\n    return (\r\n      <div className={styles.layout} >\r\n        {children}\r\n      </div>)\r\n}\r\n\r\nLayout.defaultProps = {\r\n  title: '',\r\n  children: '',\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Layout;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"MainLayout_layout__Rzm_M\"};","import PropTypes from 'prop-types';\r\nimport styles from './Logo.module.css';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction Logo ({text}) {\r\n    return (<>\r\n      <CSSTransition\r\n        in={true} appear={true}\r\n        classNames='logo'\r\n        timeout={500}\r\n        unmountOnExit>\r\n        <h1 className={styles.logo}>{text}</h1>\r\n      </CSSTransition>\r\n    </>)\r\n  };\r\n\r\nLogo.defaultProps = {\r\n  text: '',\r\n};\r\n\r\nLogo.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2kkPA\"};","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, placeholder, onChange }) {\r\n  return (\r\n    <label className={styles.label}>\r\n      <input\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n        name='filter'\r\n        className={styles.input}\r\n        placeholder={placeholder}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Filter; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1GkkB\",\"label\":\"Filter_label__3IRTf\"};","import PropTypes from 'prop-types';\r\nimport styles from './PaginationGroup.module.css';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction PaginationGroup ({prevPage, nextPage, onClickPrev, onClickNext}) {\r\n    return (<>\r\n      <ButtonGroup style={{ display: 'flex', justifyContent: 'center', boxShadow: 'none', margin: '10px'}} className={styles.button_group} variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n          {prevPage && <Button src={prevPage} onClick={onClickPrev}>Prev</Button>}\r\n          {nextPage && <Button src={nextPage} onClick={onClickNext}>Next</Button>}\r\n      </ButtonGroup>\r\n    </>)\r\n  };\r\n\r\nPaginationGroup.defaultProps = {\r\n  prevPage: '',\r\n  nextPage: '',\r\n\r\n};\r\n\r\nPaginationGroup.propTypes = {\r\n  prevPage: PropTypes.string,\r\n  nextPage: PropTypes.string,\r\n};\r\n\r\nexport default PaginationGroup;","const baseURL = 'https://rickandmortyapi.com/api';\r\n \r\nexport const getAllCharacters = async () => {\r\n  const res = await fetch(`${baseURL}/character`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all characters` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getCharactersBySpecies = async (species) => {\r\n  const res = await fetch(`${baseURL}/character/?species=${species}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by species` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n};\r\nexport const getCharactersByStatus = async (status) => {\r\n const res = await fetch(`${baseURL}/character/?status=${status}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by status` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n};\r\nexport const getCharactersByGender = async (gender) => {\r\n  const res = await fetch(`${baseURL}/character/?gender=${gender}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by gender` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n};\r\nexport const getCharactersById = async (id) => {\r\n  const res = await fetch(`${baseURL}/character/${id}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by id` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n};\r\n\r\n\r\nexport const getAllEpisodes = async () => {\r\n  const res = await fetch(`${baseURL}/episode`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all episodes` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\nexport const getEpisodesByName = async (name) => {\r\n const res = await fetch(`${baseURL}/episode/?name=${name}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch episode by name` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n}\r\n\r\n\r\nexport const getAllLocations = async () => {\r\n  const res = await fetch(`${baseURL}/location`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all locations` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\nexport const getLocationsByName = async (name) => {\r\n  const res = await fetch(`${baseURL}/location/?name=${name}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch location by name` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n}\r\nexport const getLocationsByType = async (type) => {\r\n  const res = await fetch(`${baseURL}/location/?type=${type}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch location by type` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n}\r\nexport const getLocationsByDimension = async (dimension) => {\r\n  const res = await fetch(`${baseURL}/location/?dimension=${dimension}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch location by dimension` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n}\r\n\r\nexport const pagination = async(link) => {\r\n  const res = await fetch(link)\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all characters` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n}"],"sourceRoot":""}