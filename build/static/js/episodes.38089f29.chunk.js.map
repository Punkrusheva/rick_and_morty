{"version":3,"sources":["components/EpisodesTableItem/EpisodesTableItem.js","components/EpisodesTable/EpisodesTable.js","views/EpisodesView/Episodes.js","components/MainLayout/MainLayout.js","components/MainLayout/MainLayout.module.css","components/Logo/Logo.js","components/Logo/Logo.module.css","components/Filter/Filter.js","components/Filter/Filter.module.css","components/PaginationGroup/PaginationGroup.js","services/rick-and-morty-api.js","components/EpisodesTable/EpisodesTable.module.css","components/EpisodesTableItem/EpisodesTableItem.module.css"],"names":["EpisodesTableItem","name","id","air_date","episode","className","styles","item","defaultProps","EpisodesTable","episodes","episodesTable","map","Episodes","state","filter","nextPage","prevPage","changeFilter","e","setState","currentTarget","value","getAllEpisodes","then","res","results","info","next","prev","prevState","this","getEpisodesByName","toast","error","console","log","Logo","text","Filter","placeholder","onChange","PaginationGroup","onClickPrev","onClickNext","autoClose","Component","Layout","children","layout","title","module","exports","in","appear","classNames","timeout","unmountOnExit","logo","label","type","input","style","display","justifyContent","boxShadow","margin","button_group","variant","color","aria-label","onClick","baseURL","getAllCharacters","a","fetch","ok","Error","status","json","getFilteredCharacters","filterSpecies","filterStatus","filterGender","getAllLocations","getFilteredLocations","filterName","filterType","filterDimension"],"mappings":"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","file":"static/js/episodes.38089f29.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styles from './EpisodesTableItem.module.css';\r\n\r\nfunction EpisodesTableItem({ name, id, air_date, episode}) {\r\n  return (<>\r\n    <li key={id} className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.episode}>{episode}</p>\r\n      <p className={styles.air_date}>{air_date}</p>\r\n    </li>   \r\n    </>\r\n  );\r\n};    \r\n\r\nEpisodesTableItem.defaultProps = {\r\n  name: '',\r\n  air_date: '',\r\n  episode: ''\r\n};\r\n\r\nEpisodesTableItem.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number.isRequired,\r\n  air_date: PropTypes.string,\r\n  episode: PropTypes.string,\r\n};\r\n\r\nexport default EpisodesTableItem;","import PropTypes from 'prop-types';\r\nimport styles from './EpisodesTable.module.css';\r\nimport EpisodesTableItem from '../EpisodesTableItem/EpisodesTableItem'\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction EpisodesTable({ episodes }) {\r\n\r\n  return (<>\r\n    <ul className={styles.episodesTable}>\r\n      <EpisodesTableItem\r\n        name=\"Name\"\r\n        id={123}\r\n        episode=\"Episode\"\r\n        air_date=\"Air date\">\r\n      </EpisodesTableItem>\r\n      {episodes.map(({ name, id, air_date, episode }) => (\r\n      <EpisodesTableItem\r\n        name={name}\r\n        key={id}\r\n        id={id}\r\n        episode={episode}\r\n        air_date={air_date}>\r\n      </EpisodesTableItem>\r\n      ))\r\n      }\r\n      </ul>\r\n    </>\r\n    );\r\n  }\r\n\r\nEpisodesTable.defaultProps = {\r\n  episodes: [],\r\n};\r\n\r\nEpisodesTable.propTypes = {\r\n  episodes: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    url: PropTypes.string,\r\n    name: PropTypes.string,\r\n    air_date: PropTypes.string,\r\n  }\r\n  ))\r\n};\r\n\r\nexport default EpisodesTable;","import { Component } from 'react';\r\nimport Layout from '../../components/MainLayout/MainLayout';\r\nimport EpisodesTable from '../../components/EpisodesTable/EpisodesTable'\r\nimport Filter from '../../components/Filter/Filter';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Logo from '../../components/Logo/Logo';\r\nimport PaginationGroup from '../../components/PaginationGroup/PaginationGroup';\r\nimport {\r\n  getAllEpisodes,\r\n  getEpisodesByName,\r\n  //pagination\r\n} from '../../services/rick-and-morty-api';\r\n\r\nclass Episodes extends Component {\r\n  state = {\r\n    episodes: [],\r\n    filter: '',\r\n    nextPage: '',\r\n    prevPage: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllEpisodes()\r\n      .then(res => this.setState({\r\n        episodes: res.results,\r\n        nextPage: res.info.next,\r\n        prevPage: res.info.prev\r\n      }))\r\n  }\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n    \r\n  componentDidUpdate(prevState) {\r\n    const { filter,\r\n      //nextPage, prevPage\r\n    } = this.state;\r\n    if (prevState.filter !== filter) {\r\n      getEpisodesByName(filter)\r\n      .then(res => {\r\n        if (res.results !== prevState.episodes) {\r\n          this.setState({\r\n            episodes: res.results,\r\n            nextPage: res.info.next,\r\n            prevPage: res.info.prev\r\n          })\r\n        } else {toast.error('Nothing found')}\r\n      })\r\n    }\r\n   /* if (nextPage !== prevState.nextPage || prevPage !== prevState.prevPage) {\r\n      pagination(nextPage)\r\n      .then(res => {\r\n        if (res.info.next !== prevState.nextPage) {\r\n          console.log(res.info.next);\r\n          this.setState({\r\n            episodes: res.results,\r\n            nextPage: res.info.next,\r\n            prevPage: res.info.prev\r\n          })\r\n        };\r\n      })*/\r\n  }\r\n  \r\n  render() {\r\n    const {episodes, filter, prevPage, nextPage } = this.state;\r\n    console.log(episodes);\r\n    return (\r\n      <Layout >\r\n        <Logo text='Episodes'/>\r\n        <Filter\r\n          value={filter}\r\n          placeholder='Set name'\r\n          onChange={this.changeFilter} />\r\n        <EpisodesTable episodes={episodes} />\r\n        <PaginationGroup\r\n          prevPage={prevPage}\r\n          nextPage={nextPage}\r\n          onClickPrev={prevPage}\r\n          onClickNext={nextPage} />\r\n        <ToastContainer autoClose={2500} />\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Episodes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MainLayout.module.css';\r\n\r\nfunction Layout({ children}) {\r\n    return (\r\n      <div className={styles.layout} >\r\n        {children}\r\n      </div>)\r\n}\r\n\r\nLayout.defaultProps = {\r\n  title: '',\r\n  children: '',\r\n};\r\n\r\nLayout.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Layout;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"MainLayout_layout__Rzm_M\"};","import PropTypes from 'prop-types';\r\nimport styles from './Logo.module.css';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../../stylesheets/animation.css\";\r\n\r\nfunction Logo ({text}) {\r\n    return (<>\r\n      <CSSTransition\r\n        in={true} appear={true}\r\n        classNames='logo'\r\n        timeout={500}\r\n        unmountOnExit>\r\n        <h1 className={styles.logo}>{text}</h1>\r\n      </CSSTransition>\r\n    </>)\r\n  };\r\n\r\nLogo.defaultProps = {\r\n  text: '',\r\n};\r\n\r\nLogo.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2kkPA\"};","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, placeholder, onChange }) {\r\n  return (\r\n    <label className={styles.label}>\r\n      <input\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n        name='filter'\r\n        className={styles.input}\r\n        placeholder={placeholder}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Filter; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1GkkB\",\"label\":\"Filter_label__3IRTf\"};","import PropTypes from 'prop-types';\r\nimport styles from './PaginationGroup.module.css';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction PaginationGroup ({prevPage, nextPage, onClickPrev, onClickNext}) {\r\n    return (<>\r\n      <ButtonGroup style={{ display: 'flex', justifyContent: 'center', boxShadow: 'none', margin: '10px'}} className={styles.button_group} variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n          {prevPage && <Button onClick={onClickPrev}>Prev</Button>}\r\n          {nextPage && <Button onClick={onClickNext}>Next</Button>}\r\n      </ButtonGroup>\r\n    </>)\r\n  };\r\n\r\nPaginationGroup.defaultProps = {\r\n  prevPage: '',\r\n  nextPage: '',\r\n\r\n};\r\n\r\nPaginationGroup.propTypes = {\r\n  prevPage: PropTypes.string,\r\n  nextPage: PropTypes.string,\r\n};\r\n\r\nexport default PaginationGroup;","const baseURL = 'https://rickandmortyapi.com/api';\r\n \r\nexport const getAllCharacters = async () => {\r\n  const res = await fetch(`${baseURL}/character`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all characters` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getFilteredCharacters = async (filterSpecies, filterStatus, filterGender\r\n) => {\r\n  const res = await fetch(`${baseURL}/character/?species=${filterSpecies}&status=${filterStatus}&gender=${filterGender}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by filter` +\r\n      `, received ${res.status}`);\r\n  }\r\n  /*if (res.results=== 0) {throw new Error(`There is nothing here` +\r\n      `, received ${res.status}`)}*/\r\n  return await res.json()\r\n};\r\n\r\nexport const getCharactersById = async (id) => {\r\n  const res = await fetch(`${baseURL}/character/${id}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch characters by id` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n};\r\n\r\n\r\nexport const getAllEpisodes = async () => {\r\n  const res = await fetch(`${baseURL}/episode`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all episodes` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\nexport const getEpisodesByName = async (name) => {\r\n const res = await fetch(`${baseURL}/episode/?name=${name}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch episode by name` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json()\r\n}\r\n\r\n\r\nexport const getAllLocations = async () => {\r\n  const res = await fetch(`${baseURL}/location`);\r\n    \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch all locations` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\n\r\nexport const getFilteredLocations = async (filterName, filterType, filterDimension\r\n) => {\r\n  const res = await fetch(`${baseURL}/location/?name=${filterName}&type=${filterType}&dimension=${filterDimension}`);\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch location by filter` +\r\n      `, received ${res.status}`);\r\n  }\r\n  /*if (res.results=== 0) {throw new Error(`There is nothing here` +\r\n      `, received ${res.status}`)}*/\r\n  return await res.json()\r\n};\r\n\r\nexport const pagination = async(link) => {\r\n  const res = await fetch(link)\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch` +\r\n      `, received ${res.status}`);\r\n  }\r\n  return await res.json();\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"episodesTable\":\"EpisodesTable_episodesTable__UVm6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"EpisodesTableItem_item__JHzm4\",\"name\":\"EpisodesTableItem_name__2k2KS\",\"episode\":\"EpisodesTableItem_episode__FNhZ-\",\"air_date\":\"EpisodesTableItem_air_date__2SuRH\"};"],"sourceRoot":""}